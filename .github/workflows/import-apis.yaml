name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  apictl:
    runs-on: ubuntu-latest
    env: 
      APICTL_CONFIG_DIR: /__w/apictl-workflow/apictl-workflow/master-ci
    container:
      image: malinthaprasan/apictl
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Checkout CI config
        uses: actions/checkout@v2
        with:
          ref: refs/heads/master-ci
          path: master-ci
      - run: find /__w/apictl-workflow/apictl-workflow
      - run: pwd
      - name: show version
        run: apictl get envs
      - run: apictl login cloud40 -u admin -p admin
      - run: find /__w/apictl-workflow/apictl-workflow
      - run: apictl import api -f /__w/apictl-workflow/apictl-workflow/PetStore-1.0.6 -e apim --update --rotate-revision
          
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       - name: checkout
#         uses: actions/checkout@v2

#       - name: Checkout CI config
#         uses: actions/checkout@v2
#         with:
#           ref: refs/heads/master-ci
#           path: master-ci
#       - name : PWD
#         run: pwd
#       - name: create test file
#         run: date > date.txt
#         working-directory: ./master-ci
#       - name: apictl demo
#         uses: docker://malinthaprasan/apictl
#         with:
#           args: >-
#             get envs 
#       - name: ls
#         run: ls
#         working-directory: ./master-ci
#       - name: Commit report
#         working-directory: ./master-ci
#         run: |
#           git config --global user.name 'CI bot'
#           git config --global user.email 'bot@users.noreply.github.com'
#           git commit -am "Automated report"
#           git push origin master-ci
